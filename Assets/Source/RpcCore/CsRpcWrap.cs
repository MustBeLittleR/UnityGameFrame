//this source code was auto-generated by toCsRpc#, do not modify it
using System;
using System.Collections.Generic;
using Debug = UnityEngine.Debug;
using LuaInterface;
using WCG;

public static class CsRpcWrap
{
	static int iBufSize = 1;
	static Byte[] byteBuf = new Byte[iBufSize];
	static void BufReset()
	{
		Array.Clear(byteBuf, 0, iBufSize);
	}

	delegate bool Bytes_To_Handler(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc);
	static Bytes_To_Handler[] bytes_to_pHander = new Bytes_To_Handler[]
	{
		CS2CGMoveBeign_Bytes_To,
		CS2CGChangePath_Bytes_To,
		CS2CGMoveStep_Bytes_To,
		CS2CGMoveEnd_Bytes_To,
		CS2CGStopMove_Bytes_To,
		CS2CGStopMoveOnChangeScene_Bytes_To,
		CS2CGSetSpeed_Bytes_To,
		CS2CGSetPos_Bytes_To,
		CS2CGGetControl_Bytes_To,
		CS2CGReleaseControl_Bytes_To,
		CS2CGDestroyFollower_Bytes_To,
		CS2CGCreateStaticFollower_Bytes_To,
		CS2CGCreateMoveableFollower_Bytes_To,
		CS2CGLaunchSkill_Bytes_To,
		CS2CGSkillErr_Bytes_To,
		CS2CGSyncSkillStep_Bytes_To,
		CS2CGSyncSkillStep_UIPARAM_Bytes_To,
		CS2CGSkillSingTickDelay_Bytes_To,
		CS2CGCharge_Bytes_To,
		CS2CGRefreshCD_Bytes_To,
		CS2CGAddCDTime_Bytes_To,
		CS2CGCurAddCDTime_Bytes_To,
		CS2CGAddExtCDTime_Bytes_To,
		CS2CGChangeCDRate_Bytes_To,
		CS2CGAddGlobalCDTime_Bytes_To,
		CS2CGChangeGlobalCDRate_Bytes_To,
		CS2CGAddSingTime_Bytes_To,
		CS2CGChangeSingRate_Bytes_To,
		CS2CGCreateMixState_Bytes_To,
		CS2CGRemoveMixState_Bytes_To,
		CS2CGOverlingMixState_Bytes_To,
		CS2CGSetName_Bytes_To,
		CS2CGSetMaxHP_Bytes_To,
		CS2CGSetMaxMP_Bytes_To,
		CS2CGSetCurHP_Bytes_To,
		CS2CGSetCurMP_Bytes_To,
		CS2CGSetCurXP_Bytes_To,
		CS2CGAddCurHP_Bytes_To,
		CS2CGAddCurMP_Bytes_To,
		CS2CGAddCurXP_Bytes_To,
		CS2CGSetLevel_Bytes_To,
		CS2CGSetMaxExp_Bytes_To,
		CS2CGSetCurExp_Bytes_To,
		CS2CGSetCharVol_Bytes_To,
		CS2CGSetPetMaxExp_Bytes_To,
		CS2CGSetPetCurExp_Bytes_To,
		CS2CGSetPetTransState_Bytes_To,
		CS2CGSetPetTempTrans_Bytes_To,
		CS2CGSetPetSavvy_Bytes_To,
		CS2CGSetPetRelShipLevel_Bytes_To,
		CS2CGSetPetGrowType_Bytes_To,
		CS2CGSetPetSkillNum_Bytes_To,
		CS2CGSetPetType_Bytes_To,
		CS2CGSynPlayerProperty_Bytes_To,
		CS2CGSynPlayerState_Bytes_To,
		CS2CGSynFightBasePro_Bytes_To,
		CS2CGSyncPlayerBase_Bytes_To,
		CS2CGSyncPet_Bytes_To,
		CS2CGSyncMaster_Bytes_To,
		CS2CGSyncCreateMaster_Bytes_To,
		CS2CGSynFightShanbi_Bytes_To,
		CS2CGSynFightNotMingzhong_Bytes_To,
		CS2CGSynFightDamage_Bytes_To,
		CS2CGSynFightGedang_Bytes_To,
		CS2CGSynFightDikang_Bytes_To,
		CS2CGSynFightDeath_Bytes_To,
		CS2CGSynRelive_Bytes_To,
		CS2CGSynFightXishou_Bytes_To,
		CS2CGPrintMsg_Bytes_To,
		CS2CGSynAction_Bytes_To,
		CS2CGSynNpcData_Bytes_To,
		CS2CGSynFunNpcData_Bytes_To,
		CS2CGSynIAObjData_Bytes_To,
		CS2CGSynDps_Bytes_To,
		CS2CGSynSkillSingTime_Bytes_To,
		CS2CGSynRealBTData_Bytes_To,
	};

	public delegate Byte[] To_Bytes_Handler(ref object[] valObjs, uint iOffset);
	public static To_Bytes_Handler[] to_bytes_pHander = new To_Bytes_Handler[]
	{
		CC2SGLuaModify_To_Bytes,
		CC2SGMoveBeign_To_Bytes,
		CC2SGChangePath_To_Bytes,
		CC2SGMoveStep_To_Bytes,
		CC2SGMoveEnd_To_Bytes,
		CC2SGStopMove_To_Bytes,
		CC2SGFollowerCreatePathFailed_To_Bytes,
		CC2SGLaunchSkill_To_Bytes,
		CC2SGSyncCurSkill_To_Bytes,
		CC2SGCancelCurSkill_To_Bytes,
	};

	static LuaFunction[] csRpc_to_LuaFunc = new LuaFunction[76];
	public static void RegisterCSLuaFunc()
	{
		DispatcherC<byte> tempDispatcher = new DispatcherC<byte>();
		Type[] cs2RpcSend = tempDispatcher.HandlerRcvType;
		for (int i = 0; i < cs2RpcSend.Length; i++)
		{
			Debug.Assert(csRpc_to_LuaFunc[i] == null);
			string sLuaFunc = cs2RpcSend[i].Name.Replace("CS2CG", "Gas2GacCs.");
			LuaFunction luafunc = GameMgr.ms_luaMgr.GetLuaFunction(sLuaFunc, false);
			Debug.AssertFormat(luafunc!=null, "RegisterCSLuaFunc Error: {0}", sLuaFunc);
			csRpc_to_LuaFunc[i] = luafunc;
		}
	}

	public static void DisposeCSLuaFunc()
	{
		for (int i = 0; i < csRpc_to_LuaFunc.Length; i++)
		{
			LuaFunction luafunc = csRpc_to_LuaFunc[i];
			if (luafunc != null)
			{
				luafunc.Dispose();
				luafunc = null;
				csRpc_to_LuaFunc[i] = null;
			}
		}
	}

	public static bool Call_Bytes2Handler_To_Lua(int iType, ref Byte[] pData, uint iRpcOffset, ref uint uProcessedOnce)
	{
		try
		{
			Bytes_To_Handler pBy2Handler = bytes_to_pHander[iType];
			LuaFunction pLuaFunc = csRpc_to_LuaFunc[iType];
			if (null == pBy2Handler || null == pLuaFunc)
				Debug.AssertFormat(false, "Call_Bytes2Handler_To_Lua(iType Error):{0}", iType);
			pLuaFunc.BeginPCall();
			bool bCheckVal = pBy2Handler(ref pData, iRpcOffset, ref uProcessedOnce, ref pLuaFunc);
			if (!bCheckVal)
				Debug.AssertFormat(false, "Call_Bytes2Handler_To_Lua(pBy2Handler Error):{0},{1}", iType, iRpcOffset);
			pLuaFunc.PCall();
			pLuaFunc.EndPCall();
			return true;
		}
		catch (Exception ex)
		{
			Debug.LogErrorFormat("Call_Bytes2Handler_To_Lua(Exception):{0}", ex.ToString());
		}
		return false;
	}

	//************** EquipItem **************
	public static Byte[] EquipItem_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 3;
			int iStructSize = 6;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("EquipItem_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("EquipItem_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** EquipItem **************
	public static bool EquipItem_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 6;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("EquipItem_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uBigId = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uBigId); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uLevel = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uLevel); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("EquipItem_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("EquipItem_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGMoveBeign **************
	public static bool CS2CGMoveBeign_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 35;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGMoveBeign_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uGap = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uGap); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPathFindType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPathFindType); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGMoveBeign_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGMoveBeign_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGChangePath **************
	public static bool CS2CGChangePath_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 43;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGChangePath_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uGap = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uGap); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPathFindType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPathFindType); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGChangePath_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGChangePath_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGMoveStep **************
	public static bool CS2CGMoveStep_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 12;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGMoveStep_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGMoveStep_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGMoveStep_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGMoveEnd **************
	public static bool CS2CGMoveEnd_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 4;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGMoveEnd_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGMoveEnd_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGMoveEnd_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGStopMove **************
	public static bool CS2CGStopMove_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 20;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGStopMove_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGStopMove_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGStopMove_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGStopMoveOnChangeScene **************
	public static bool CS2CGStopMoveOnChangeScene_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 12;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGStopMoveOnChangeScene_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGStopMoveOnChangeScene_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGStopMoveOnChangeScene_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetSpeed **************
	public static bool CS2CGSetSpeed_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 6;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetSpeed_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetSpeed_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetSpeed_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPos **************
	public static bool CS2CGSetPos_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 12;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPos_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPos_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPos_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGGetControl **************
	public static bool CS2CGGetControl_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 12;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGGetControl_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGGetControl_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGGetControl_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGReleaseControl **************
	public static bool CS2CGReleaseControl_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 4;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGReleaseControl_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGReleaseControl_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGReleaseControl_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGDestroyFollower **************
	public static bool CS2CGDestroyFollower_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 4;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGDestroyFollower_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGDestroyFollower_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGDestroyFollower_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGCreateStaticFollower **************
	public static bool CS2CGCreateStaticFollower_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 20;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGCreateStaticFollower_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt64(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGCreateStaticFollower_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGCreateStaticFollower_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGCreateMoveableFollower **************
	public static bool CS2CGCreateMoveableFollower_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 59;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGCreateMoveableFollower_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt64(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uGap = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uGap); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPathFindType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPathFindType); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGCreateMoveableFollower_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGCreateMoveableFollower_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGLaunchSkill **************
	public static bool CS2CGLaunchSkill_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 19;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGLaunchSkill_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uLaunchCharacterType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uLaunchCharacterType); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGLaunchSkill_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGLaunchSkill_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSkillErr **************
	public static bool CS2CGSkillErr_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 22;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSkillErr_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 nStepState = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(nStepState); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 nErrInfoIndex = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(nErrInfoIndex); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSkillErr_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSkillErr_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSyncSkillStep **************
	public static bool CS2CGSyncSkillStep_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 30;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSyncSkillStep_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 nStepState = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(nStepState); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSyncSkillStep_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSyncSkillStep_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSyncSkillStep_UIPARAM **************
	public static bool CS2CGSyncSkillStep_UIPARAM_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 62;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSyncSkillStep_UIPARAM_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 nStepState = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(nStepState); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			Byte[] sUIParam = new Byte[32]; Array.Copy(pData, uProcessed, sUIParam, 0, 32); luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(sUIParam)); uProcessed += 32; uProcessedLen += 32;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSyncSkillStep_UIPARAM_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSyncSkillStep_UIPARAM_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSkillSingTickDelay **************
	public static bool CS2CGSkillSingTickDelay_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 18;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSkillSingTickDelay_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSkillSingTickDelay_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSkillSingTickDelay_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGCharge **************
	public static bool CS2CGCharge_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 16;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGCharge_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGCharge_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGCharge_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGRefreshCD **************
	public static bool CS2CGRefreshCD_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGRefreshCD_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGRefreshCD_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGRefreshCD_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGAddCDTime **************
	public static bool CS2CGAddCDTime_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 12;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGAddCDTime_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGAddCDTime_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGAddCDTime_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGCurAddCDTime **************
	public static bool CS2CGCurAddCDTime_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 12;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGCurAddCDTime_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGCurAddCDTime_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGCurAddCDTime_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGAddExtCDTime **************
	public static bool CS2CGAddExtCDTime_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGAddExtCDTime_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGAddExtCDTime_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGAddExtCDTime_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGChangeCDRate **************
	public static bool CS2CGChangeCDRate_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 12;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGChangeCDRate_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToSingle(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGChangeCDRate_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGChangeCDRate_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGAddGlobalCDTime **************
	public static bool CS2CGAddGlobalCDTime_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGAddGlobalCDTime_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGAddGlobalCDTime_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGAddGlobalCDTime_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGChangeGlobalCDRate **************
	public static bool CS2CGChangeGlobalCDRate_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGChangeGlobalCDRate_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToSingle(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGChangeGlobalCDRate_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGChangeGlobalCDRate_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGAddSingTime **************
	public static bool CS2CGAddSingTime_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGAddSingTime_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGAddSingTime_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGAddSingTime_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGChangeSingRate **************
	public static bool CS2CGChangeSingRate_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGChangeSingRate_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToSingle(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGChangeSingRate_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGChangeSingRate_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGCreateMixState **************
	public static bool CS2CGCreateMixState_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 25;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGCreateMixState_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 nOverly = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(nOverly); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGCreateMixState_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGCreateMixState_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGRemoveMixState **************
	public static bool CS2CGRemoveMixState_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGRemoveMixState_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGRemoveMixState_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGRemoveMixState_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGOverlingMixState **************
	public static bool CS2CGOverlingMixState_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 20;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGOverlingMixState_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGOverlingMixState_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGOverlingMixState_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetName **************
	public static bool CS2CGSetName_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 36;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetName_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			Byte[] sName = new Byte[32]; Array.Copy(pData, uProcessed, sName, 0, 32); luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(sName)); uProcessed += 32; uProcessedLen += 32;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetName_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetName_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetMaxHP **************
	public static bool CS2CGSetMaxHP_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetMaxHP_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetMaxHP_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetMaxHP_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetMaxMP **************
	public static bool CS2CGSetMaxMP_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetMaxMP_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetMaxMP_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetMaxMP_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetCurHP **************
	public static bool CS2CGSetCurHP_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetCurHP_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetCurHP_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetCurHP_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetCurMP **************
	public static bool CS2CGSetCurMP_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetCurMP_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetCurMP_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetCurMP_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetCurXP **************
	public static bool CS2CGSetCurXP_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetCurXP_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetCurXP_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetCurXP_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGAddCurHP **************
	public static bool CS2CGAddCurHP_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 21;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGAddCurHP_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uDisplayType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uDisplayType); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGAddCurHP_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGAddCurHP_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGAddCurMP **************
	public static bool CS2CGAddCurMP_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 9;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGAddCurMP_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGAddCurMP_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGAddCurMP_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGAddCurXP **************
	public static bool CS2CGAddCurXP_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGAddCurXP_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGAddCurXP_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGAddCurXP_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetLevel **************
	public static bool CS2CGSetLevel_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 6;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetLevel_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetLevel_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetLevel_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetMaxExp **************
	public static bool CS2CGSetMaxExp_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 4;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetMaxExp_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetMaxExp_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetMaxExp_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetCurExp **************
	public static bool CS2CGSetCurExp_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 4;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetCurExp_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetCurExp_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetCurExp_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetCharVol **************
	public static bool CS2CGSetCharVol_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 12;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetCharVol_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetCharVol_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetCharVol_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPetMaxExp **************
	public static bool CS2CGSetPetMaxExp_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPetMaxExp_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPetMaxExp_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPetMaxExp_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPetCurExp **************
	public static bool CS2CGSetPetCurExp_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 9;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPetCurExp_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uCoteId = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uCoteId); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPetCurExp_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPetCurExp_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPetTransState **************
	public static bool CS2CGSetPetTransState_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 5;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPetTransState_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uTrans = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uTrans); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPetTransState_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPetTransState_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPetTempTrans **************
	public static bool CS2CGSetPetTempTrans_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 5;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPetTempTrans_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPetTempTrans_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPetTempTrans_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPetSavvy **************
	public static bool CS2CGSetPetSavvy_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 5;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPetSavvy_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uSavvy = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uSavvy); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPetSavvy_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPetSavvy_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPetRelShipLevel **************
	public static bool CS2CGSetPetRelShipLevel_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 5;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPetRelShipLevel_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uRelShipLevel = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uRelShipLevel); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPetRelShipLevel_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPetRelShipLevel_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPetGrowType **************
	public static bool CS2CGSetPetGrowType_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 5;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPetGrowType_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uGrowType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uGrowType); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPetGrowType_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPetGrowType_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPetSkillNum **************
	public static bool CS2CGSetPetSkillNum_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 5;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPetSkillNum_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uSkillNum = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uSkillNum); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPetSkillNum_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPetSkillNum_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSetPetType **************
	public static bool CS2CGSetPetType_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 5;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSetPetType_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPetType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPetType); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSetPetType_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSetPetType_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynPlayerProperty **************
	public static bool CS2CGSynPlayerProperty_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 15;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynPlayerProperty_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uCharType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uCharType); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPetCoteId = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPetCoteId); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uType); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynPlayerProperty_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynPlayerProperty_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynPlayerState **************
	public static bool CS2CGSynPlayerState_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 7;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynPlayerState_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynPlayerState_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynPlayerState_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynFightBasePro **************
	public static bool CS2CGSynFightBasePro_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 42;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynFightBasePro_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPartPai = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPartPai); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uSex = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uSex); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uDataLength = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uDataLength); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynFightBasePro_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;

			//************ CS2CGSynFightBasePro(special Begin) ************
			if (uDataLength > 0)
			{
				Byte[] extra = new byte[uDataLength];
				Array.Copy (pData, uProcessed, extra, 0, uDataLength);
				uProcessed+=uDataLength; uProcessedOnce += uDataLength;
				luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(extra));
			}
			else
			{
				luafunc.PushGeneric("");
			}
			//************ CS2CGSynFightBasePro(special End) ************
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynFightBasePro_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSyncPlayerBase **************
	public static bool CS2CGSyncPlayerBase_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 112;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSyncPlayerBase_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			Byte[] szCharId = new Byte[20]; Array.Copy(pData, uProcessed, szCharId, 0, 20); luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(szCharId)); uProcessed += 20; uProcessedLen += 20;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uCamp = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uCamp); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uCampNobility = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uCampNobility); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uTongPos = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uTongPos); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uRide = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uRide); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPkMode = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPkMode); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uNameColorType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uNameColorType); uProcessed += 1; uProcessedLen += 1;
			EquipItem_Bytes_To(ref pData, uProcessed, ref uProcessedOnce, ref luafunc); uProcessed += 6; uProcessedLen += 6;
			EquipItem_Bytes_To(ref pData, uProcessed, ref uProcessedOnce, ref luafunc); uProcessed += 6; uProcessedLen += 6;
			EquipItem_Bytes_To(ref pData, uProcessed, ref uProcessedOnce, ref luafunc); uProcessed += 6; uProcessedLen += 6;
			EquipItem_Bytes_To(ref pData, uProcessed, ref uProcessedOnce, ref luafunc); uProcessed += 6; uProcessedLen += 6;
			EquipItem_Bytes_To(ref pData, uProcessed, ref uProcessedOnce, ref luafunc); uProcessed += 6; uProcessedLen += 6;
			EquipItem_Bytes_To(ref pData, uProcessed, ref uProcessedOnce, ref luafunc); uProcessed += 6; uProcessedLen += 6;
			EquipItem_Bytes_To(ref pData, uProcessed, ref uProcessedOnce, ref luafunc); uProcessed += 6; uProcessedLen += 6;
			EquipItem_Bytes_To(ref pData, uProcessed, ref uProcessedOnce, ref luafunc); uProcessed += 6; uProcessedLen += 6;
			EquipItem_Bytes_To(ref pData, uProcessed, ref uProcessedOnce, ref luafunc); uProcessed += 6; uProcessedLen += 6;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uHair = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uHair); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uHairCol = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uHairCol); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uFace = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uFace); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uVIPLevel = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uVIPLevel); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uDataLength = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uDataLength); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uCarryId = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uCarryId); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPlayerType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPlayerType); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uTattooLength = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uTattooLength); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSyncPlayerBase_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;

			//************ CS2CGSyncPlayerBase(special Begin) ************
			if (uDataLength > 0)
			{
				Byte[] extra = new byte[uDataLength];
				Array.Copy (pData, uProcessed, extra, 0, uDataLength);
				uProcessed+=uDataLength; uProcessedOnce += uDataLength;
				luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(extra));
			}
			else
			{
				luafunc.PushGeneric("");
			}
			if (uTattooLength > 0)
			{
				Byte[] extra = new byte[uTattooLength];
				Array.Copy (pData, uProcessed, extra, 0, uTattooLength);
				uProcessed+=uTattooLength; uProcessedOnce += uTattooLength;
				luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(extra));
			}
			else
			{
				luafunc.PushGeneric("");
			}
			//************ CS2CGSyncPlayerBase(special End) ************
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSyncPlayerBase_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSyncPet **************
	public static bool CS2CGSyncPet_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 19;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSyncPet_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt16(pData, (int)uProcessed)); uProcessed += 2; uProcessedLen += 2;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uCampType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uCampType); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uNameColorType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uNameColorType); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uTrans = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uTrans); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uSavvy = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uSavvy); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uSkillNum = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uSkillNum); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uGrowType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uGrowType); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uRelShipLevel = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uRelShipLevel); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPetType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPetType); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSyncPet_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSyncPet_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSyncMaster **************
	public static bool CS2CGSyncMaster_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSyncMaster_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSyncMaster_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSyncMaster_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSyncCreateMaster **************
	public static bool CS2CGSyncCreateMaster_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSyncCreateMaster_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSyncCreateMaster_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSyncCreateMaster_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynFightShanbi **************
	public static bool CS2CGSynFightShanbi_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynFightShanbi_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynFightShanbi_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynFightShanbi_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynFightNotMingzhong **************
	public static bool CS2CGSynFightNotMingzhong_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynFightNotMingzhong_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynFightNotMingzhong_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynFightNotMingzhong_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynFightDamage **************
	public static bool CS2CGSynFightDamage_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 13;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynFightDamage_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynFightDamage_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynFightDamage_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynFightGedang **************
	public static bool CS2CGSynFightGedang_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynFightGedang_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynFightGedang_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynFightGedang_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynFightDikang **************
	public static bool CS2CGSynFightDikang_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynFightDikang_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynFightDikang_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynFightDikang_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynFightDeath **************
	public static bool CS2CGSynFightDeath_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 37;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynFightDeath_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			Byte[] sName = new Byte[32]; Array.Copy(pData, uProcessed, sName, 0, 32); luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(sName)); uProcessed += 32; uProcessedLen += 32;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uType); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynFightDeath_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynFightDeath_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynRelive **************
	public static bool CS2CGSynRelive_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 12;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynRelive_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynRelive_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynRelive_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynFightXishou **************
	public static bool CS2CGSynFightXishou_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynFightXishou_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynFightXishou_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynFightXishou_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGPrintMsg **************
	public static bool CS2CGPrintMsg_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 64;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGPrintMsg_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			Byte[] strPrintMsg = new Byte[64]; Array.Copy(pData, uProcessed, strPrintMsg, 0, 64); luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(strPrintMsg)); uProcessed += 64; uProcessedLen += 64;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGPrintMsg_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGPrintMsg_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynAction **************
	public static bool CS2CGSynAction_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 8;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynAction_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynAction_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynAction_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynNpcData **************
	public static bool CS2CGSynNpcData_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 21;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynNpcData_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uDir = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uDir); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPower = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPower); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uGroupType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uGroupType); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uDropLvType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uDropLvType); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uValidPlayerCharIDLength = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uValidPlayerCharIDLength); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uAddNameLength = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uAddNameLength); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uRandomAiLength = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uRandomAiLength); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynNpcData_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;

			//************ CS2CGSynNpcData(special Begin) ************
			if (uValidPlayerCharIDLength > 0)
			{
				Byte[] extra = new byte[uValidPlayerCharIDLength];
				Array.Copy (pData, uProcessed, extra, 0, uValidPlayerCharIDLength);
				uProcessed+=uValidPlayerCharIDLength; uProcessedOnce += uValidPlayerCharIDLength;
				luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(extra));
			}
			else
			{
				luafunc.PushGeneric("");
			}
			if (uAddNameLength > 0)
			{
				Byte[] extra = new byte[uAddNameLength];
				Array.Copy (pData, uProcessed, extra, 0, uAddNameLength);
				uProcessed+=uAddNameLength; uProcessedOnce += uAddNameLength;
				luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(extra));
			}
			else
			{
				luafunc.PushGeneric("");
			}
			if (uRandomAiLength > 0)
			{
				Byte[] extra = new byte[uRandomAiLength];
				Array.Copy (pData, uProcessed, extra, 0, uRandomAiLength);
				uProcessed+=uRandomAiLength; uProcessedOnce += uRandomAiLength;
				luafunc.PushGeneric(System.Text.Encoding.UTF8.GetString(extra));
			}
			else
			{
				luafunc.PushGeneric("");
			}
			//************ CS2CGSynNpcData(special End) ************
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynNpcData_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynFunNpcData **************
	public static bool CS2CGSynFunNpcData_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 9;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynFunNpcData_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uDir = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uDir); uProcessed += 1; uProcessedLen += 1;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynFunNpcData_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynFunNpcData_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynIAObjData **************
	public static bool CS2CGSynIAObjData_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 33;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynIAObjData_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); luafunc.PushGeneric(Convert.ToBoolean(byteBuf[0])); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uDir = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uDir); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uCamp = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uCamp); uProcessed += 1; uProcessedLen += 1;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uNameColor = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uNameColor); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToUInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynIAObjData_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynIAObjData_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynDps **************
	public static bool CS2CGSynDps_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 16;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynDps_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynDps_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynDps_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynSkillSingTime **************
	public static bool CS2CGSynSkillSingTime_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 13;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynSkillSingTime_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uEffectType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uEffectType); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToDouble(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynSkillSingTime_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynSkillSingTime_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CS2CGSynRealBTData **************
	public static bool CS2CGSynRealBTData_Bytes_To(ref Byte[] pData, uint iOffset, ref uint uProcessedOnce, ref LuaFunction luafunc)
	{
		try
		{
			int iStructSize = 58;
			if (pData.Length < (iOffset + iStructSize))
			{
				Debug.LogWarningFormat("CS2CGSynRealBTData_Bytes_To(parameters wrong):{0},{1},{2}",pData.Length,iOffset,iStructSize);
				return false;
			}
			uint uProcessed = iOffset;
			uint uProcessedLen = 0;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uAcType = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uAcType); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt64(pData, (int)uProcessed)); uProcessed += 8; uProcessedLen += 8;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			BufReset(); Array.Copy(pData, uProcessed, byteBuf, 0, 1); UInt16 uPopTimes = Convert.ToUInt16(byteBuf[0]); luafunc.PushGeneric(uPopTimes); uProcessed += 1; uProcessedLen += 1;
			luafunc.PushGeneric(BitConverter.ToInt32(pData, (int)uProcessed)); uProcessed += 4; uProcessedLen += 4;
			if (uProcessedLen != iStructSize)
			{
				Debug.LogWarningFormat("CS2CGSynRealBTData_Bytes_To(uProcessedOnce Error):{0},{1}",uProcessedOnce,iStructSize);
				return false;
			}
			uProcessedOnce += uProcessedLen;
			return true;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CS2CGSynRealBTData_Bytes_To(Exception):{0}",ex.ToString());
		}
		return false;
	}

	//************** CC2SGLuaModify **************
	public static Byte[] CC2SGLuaModify_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 1;
			int iStructSize = 1;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGLuaModify_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGLuaModify_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** CC2SGMoveBeign **************
	public static Byte[] CC2SGMoveBeign_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 9;
			int iStructSize = 28;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGMoveBeign_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToBoolean(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToDouble(valObjs[idx++])), 0, bytes, uProcessed, 8); uProcessed+=8;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGMoveBeign_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** CC2SGChangePath **************
	public static Byte[] CC2SGChangePath_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 12;
			int iStructSize = 40;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGChangePath_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt16(valObjs[idx++])), 0, bytes, uProcessed, 2); uProcessed+=2;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt16(valObjs[idx++])), 0, bytes, uProcessed, 2); uProcessed+=2;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToBoolean(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToDouble(valObjs[idx++])), 0, bytes, uProcessed, 8); uProcessed+=8;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToDouble(valObjs[idx++])), 0, bytes, uProcessed, 8); uProcessed+=8;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGChangePath_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** CC2SGMoveStep **************
	public static Byte[] CC2SGMoveStep_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 5;
			int iStructSize = 15;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGMoveStep_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt16(valObjs[idx++])), 0, bytes, uProcessed, 2); uProcessed+=2;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt16(valObjs[idx++])), 0, bytes, uProcessed, 2); uProcessed+=2;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToDouble(valObjs[idx++])), 0, bytes, uProcessed, 8); uProcessed+=8;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt16(valObjs[idx++])), 0, bytes, uProcessed, 2); uProcessed+=2;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGMoveStep_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** CC2SGMoveEnd **************
	public static Byte[] CC2SGMoveEnd_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 3;
			int iStructSize = 9;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGMoveEnd_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGMoveEnd_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** CC2SGStopMove **************
	public static Byte[] CC2SGStopMove_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 4;
			int iStructSize = 17;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGStopMove_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToDouble(valObjs[idx++])), 0, bytes, uProcessed, 8); uProcessed+=8;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGStopMove_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** CC2SGFollowerCreatePathFailed **************
	public static Byte[] CC2SGFollowerCreatePathFailed_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 2;
			int iStructSize = 5;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGFollowerCreatePathFailed_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGFollowerCreatePathFailed_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** CC2SGLaunchSkill **************
	public static Byte[] CC2SGLaunchSkill_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 13;
			int iStructSize = 46;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGLaunchSkill_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToBoolean(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToSingle(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGLaunchSkill_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** CC2SGSyncCurSkill **************
	public static Byte[] CC2SGSyncCurSkill_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 5;
			int iStructSize = 14;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGSyncCurSkill_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToUInt32(valObjs[idx++])), 0, bytes, uProcessed, 4); uProcessed+=4;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToBoolean(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGSyncCurSkill_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}

	//************** CC2SGCancelCurSkill **************
	public static Byte[] CC2SGCancelCurSkill_To_Bytes(ref object[] valObjs, uint iOffset)
	{
		try
		{
			int iParaNum = 1;
			int iStructSize = 1;
			if (valObjs.Length < iParaNum + iOffset)
			{
				Debug.LogWarningFormat("CC2SGCancelCurSkill_To_Bytes(parameters wrong):{0},{1}",valObjs.Length,iParaNum);
				return null;
			}
			Byte[] bytes = new Byte[iStructSize];
			uint idx = iOffset;
			int uProcessed = 0;
			Array.Copy(System.BitConverter.GetBytes(Convert.ToByte(valObjs[idx++])), 0, bytes, uProcessed, 1); uProcessed+=1;
			return bytes;
		}
		catch(Exception ex)
		{
			Debug.LogWarningFormat("CC2SGCancelCurSkill_To_Bytes(Exception):{0}",ex.ToString());
		}
		return null;
	}


}

