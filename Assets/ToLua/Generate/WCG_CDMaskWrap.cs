//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class WCG_CDMaskWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(WCG.CDMask), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetCDTime", SetCDTime);
		L.RegFunction("SetMenPaiCDTime", SetMenPaiCDTime);
		L.RegFunction("OnChangeCD", OnChangeCD);
		L.RegFunction("GetEspTime", GetEspTime);
		L.RegFunction("ChangeEspTime", ChangeEspTime);
		L.RegFunction("SetEspTime", SetEspTime);
		L.RegFunction("SetClearCDFun", SetClearCDFun);
		L.RegFunction("SetPause", SetPause);
		L.RegFunction("SetReverse", SetReverse);
		L.RegFunction("ClearCD", ClearCD);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_CDTime", get_m_CDTime, set_m_CDTime);
		L.RegVar("m_EspTime", get_m_EspTime, set_m_EspTime);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCDTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetCDTime(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMenPaiCDTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetMenPaiCDTime(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnChangeCD(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.OnChangeCD(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEspTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			float o = obj.GetEspTime();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeEspTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.ChangeEspTime(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetEspTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetEspTime(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetClearCDFun(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.SetClearCDFun(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetPause(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetReverse(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetReverse(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearCD(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.CDMask obj = (WCG.CDMask)ToLua.CheckObject<WCG.CDMask>(L, 1);
			obj.ClearCD();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_CDTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			WCG.CDMask obj = (WCG.CDMask)o;
			float ret = obj.m_CDTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_CDTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_EspTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			WCG.CDMask obj = (WCG.CDMask)o;
			float ret = obj.m_EspTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_EspTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_CDTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			WCG.CDMask obj = (WCG.CDMask)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_CDTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_CDTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_EspTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			WCG.CDMask obj = (WCG.CDMask)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_EspTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_EspTime on a nil value");
		}
	}
}

