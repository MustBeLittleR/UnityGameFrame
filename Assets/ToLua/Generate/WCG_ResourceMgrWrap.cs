//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class WCG_ResourceMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(WCG.ResourceMgr), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("InitResLoadCallBack", InitResLoadCallBack);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("AddAssObjToCache", AddAssObjToCache);
		L.RegFunction("Update", Update);
		L.RegFunction("LoadAssetBundleAsync", LoadAssetBundleAsync);
		L.RegFunction("OnAsynLoadABOk", OnAsynLoadABOk);
		L.RegFunction("OnAsynLoadObjOk", OnAsynLoadObjOk);
		L.RegFunction("GetAsynABLoaded", GetAsynABLoaded);
		L.RegFunction("AsynABIsLoaded", AsynABIsLoaded);
		L.RegFunction("AsynABIsLoading", AsynABIsLoading);
		L.RegFunction("OnInsAsynAssObj", OnInsAsynAssObj);
		L.RegFunction("GetAllDependencies", GetAllDependencies);
		L.RegFunction("OnUnLoadAssetAB", OnUnLoadAssetAB);
		L.RegFunction("LoadVersion", LoadVersion);
		L.RegFunction("LoadSceneAB", LoadSceneAB);
		L.RegFunction("UnLoadSceneAB", UnLoadSceneAB);
		L.RegFunction("LoadAsset", LoadAsset);
		L.RegFunction("LoadAssetAsync", LoadAssetAsync);
		L.RegFunction("UnLoadAsset", UnLoadAsset);
		L.RegFunction("GetInsGameObj", GetInsGameObj);
		L.RegFunction("PutInsGameObj", PutInsGameObj);
		L.RegFunction("CacheLoadGameObject", CacheLoadGameObject);
		L.RegFunction("ClearInsGameObjOnChangeScene", ClearInsGameObjOnChangeScene);
		L.RegFunction("ClearInsCacheGameObj", ClearInsCacheGameObj);
		L.RegFunction("LoadAssetEx", LoadAssetEx);
		L.RegFunction("LoadAssetWithStateEx", LoadAssetWithStateEx);
		L.RegFunction("LoadAssetAsyncEx", LoadAssetAsyncEx);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.RegVar("ms_tyGameObject", get_ms_tyGameObject, set_ms_tyGameObject);
		L.RegVar("ms_tyComponent", get_ms_tyComponent, set_ms_tyComponent);
		L.RegVar("ms_tyAssetBundle", get_ms_tyAssetBundle, set_ms_tyAssetBundle);
		L.RegVar("ms_tySprite", get_ms_tySprite, set_ms_tySprite);
		L.RegVar("ms_tyABManifest", get_ms_tyABManifest, set_ms_tyABManifest);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitResLoadCallBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			obj.InitResLoadCallBack();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			obj.Destroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddAssObjToCache(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				UnityEngine.Object arg2 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 4);
				UnityEngine.AssetBundle arg3 = (UnityEngine.AssetBundle)ToLua.CheckObject(L, 5, typeof(UnityEngine.AssetBundle));
				obj.AddAssObjToCache(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				UnityEngine.Object arg2 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 4);
				UnityEngine.AssetBundle arg3 = (UnityEngine.AssetBundle)ToLua.CheckObject(L, 5, typeof(UnityEngine.AssetBundle));
				bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
				obj.AddAssObjToCache(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.ResourceMgr.AddAssObjToCache");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetBundleAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle> arg1 = (UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle>>(L, 3);
			obj.LoadAssetBundleAsync(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAsynLoadABOk(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.AssetBundle arg1 = (UnityEngine.AssetBundle)ToLua.CheckObject(L, 3, typeof(UnityEngine.AssetBundle));
			obj.OnAsynLoadABOk(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAsynLoadObjOk(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			obj.OnAsynLoadObjOk(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAsynABLoaded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.AssetBundle o = obj.GetAsynABLoaded(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AsynABIsLoaded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.AsynABIsLoaded(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AsynABIsLoading(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle> arg1 = (UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle>>(L, 3);
			bool o = obj.AsynABIsLoading(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInsAsynAssObj(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				UnityEngine.Events.UnityAction<string,UnityEngine.GameObject> arg0 = (UnityEngine.Events.UnityAction<string,UnityEngine.GameObject>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<string,UnityEngine.GameObject>>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				UnityEngine.GameObject arg2 = (UnityEngine.GameObject)ToLua.CheckObject(L, 4, typeof(UnityEngine.GameObject));
				obj.OnInsAsynAssObj(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				UnityEngine.Events.UnityAction<string,UnityEngine.GameObject> arg0 = (UnityEngine.Events.UnityAction<string,UnityEngine.GameObject>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<string,UnityEngine.GameObject>>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				UnityEngine.GameObject arg2 = (UnityEngine.GameObject)ToLua.CheckObject(L, 4, typeof(UnityEngine.GameObject));
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				obj.OnInsAsynAssObj(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.ResourceMgr.OnInsAsynAssObj");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllDependencies(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string[] o = obj.GetAllDependencies(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUnLoadAssetAB(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				obj.OnUnLoadAssetAB(arg0);
				return 0;
			}
			else if (count == 3)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				obj.OnUnLoadAssetAB(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				obj.OnUnLoadAssetAB(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				obj.OnUnLoadAssetAB(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.ResourceMgr.OnUnLoadAssetAB");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadVersion(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = WCG.ResourceMgr.LoadVersion();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadSceneAB(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				WCG.ResourceMgr.LoadSceneAB(arg0);
				return 0;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle> arg1 = (UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle>>(L, 2);
				WCG.ResourceMgr.LoadSceneAB(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle> arg1 = (UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<string,UnityEngine.AssetBundle>>(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				WCG.ResourceMgr.LoadSceneAB(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.ResourceMgr.LoadSceneAB");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnLoadSceneAB(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.AssetBundle arg0 = (UnityEngine.AssetBundle)ToLua.CheckObject(L, 1, typeof(UnityEngine.AssetBundle));
			WCG.ResourceMgr.UnLoadSceneAB(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAsset(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				UnityEngine.Object o = WCG.ResourceMgr.LoadAsset(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = ToLua.CheckMonoType(L, 3);
				UnityEngine.Object o = WCG.ResourceMgr.LoadAsset(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.ResourceMgr.LoadAsset");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetAsync(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				WCG.ResourceMgr.LoadAssetAsync(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = ToLua.CheckMonoType(L, 3);
				WCG.ResourceMgr.LoadAssetAsync(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = ToLua.CheckMonoType(L, 3);
				UnityEngine.Events.UnityAction<UnityEngine.Object> arg3 = (UnityEngine.Events.UnityAction<UnityEngine.Object>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<UnityEngine.Object>>(L, 4);
				WCG.ResourceMgr.LoadAssetAsync(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = ToLua.CheckMonoType(L, 3);
				UnityEngine.Events.UnityAction<UnityEngine.Object> arg3 = (UnityEngine.Events.UnityAction<UnityEngine.Object>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<UnityEngine.Object>>(L, 4);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
				WCG.ResourceMgr.LoadAssetAsync(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.ResourceMgr.LoadAssetAsync");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnLoadAsset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
			WCG.ResourceMgr.UnLoadAsset(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInsGameObj(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			UnityEngine.GameObject o = WCG.ResourceMgr.GetInsGameObj(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PutInsGameObj(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				WCG.ResourceMgr.PutInsGameObj(arg0);
				return 0;
			}
			else if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				WCG.ResourceMgr.PutInsGameObj(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.ResourceMgr.PutInsGameObj");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CacheLoadGameObject(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				obj.CacheLoadGameObject(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				obj.CacheLoadGameObject(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.ResourceMgr.CacheLoadGameObject");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearInsGameObjOnChangeScene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			obj.ClearInsGameObjOnChangeScene();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearInsCacheGameObj(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			WCG.ResourceMgr obj = (WCG.ResourceMgr)ToLua.CheckObject<WCG.ResourceMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.ClearInsCacheGameObj(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetEx(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			UnityEngine.GameObject o = WCG.ResourceMgr.LoadAssetEx(arg0, arg1);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetWithStateEx(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			string arg0 = ToLua.CheckString(L, 1);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
			UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
			UnityEngine.GameObject o = WCG.ResourceMgr.LoadAssetWithStateEx(arg0, arg1, arg2, arg3);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetAsyncEx(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
			WCG.ResourceMgr.LoadAssetAsyncEx(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, WCG.ResourceMgr.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ms_tyGameObject(IntPtr L)
	{
		try
		{
			ToLua.Push(L, WCG.ResourceMgr.ms_tyGameObject);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ms_tyComponent(IntPtr L)
	{
		try
		{
			ToLua.Push(L, WCG.ResourceMgr.ms_tyComponent);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ms_tyAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.Push(L, WCG.ResourceMgr.ms_tyAssetBundle);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ms_tySprite(IntPtr L)
	{
		try
		{
			ToLua.Push(L, WCG.ResourceMgr.ms_tySprite);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ms_tyABManifest(IntPtr L)
	{
		try
		{
			ToLua.Push(L, WCG.ResourceMgr.ms_tyABManifest);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ms_tyGameObject(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			WCG.ResourceMgr.ms_tyGameObject = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ms_tyComponent(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			WCG.ResourceMgr.ms_tyComponent = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ms_tyAssetBundle(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			WCG.ResourceMgr.ms_tyAssetBundle = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ms_tySprite(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			WCG.ResourceMgr.ms_tySprite = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ms_tyABManifest(IntPtr L)
	{
		try
		{
			System.Type arg0 = ToLua.CheckMonoType(L, 2);
			WCG.ResourceMgr.ms_tyABManifest = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

