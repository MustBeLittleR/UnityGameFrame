//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class WCG_RenderObjWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(WCG.RenderObj), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetDummyFromCache", GetDummyFromCache);
		L.RegFunction("SetScale", SetScale);
		L.RegFunction("SetModelZoomRate", SetModelZoomRate);
		L.RegFunction("SetVisible", SetVisible);
		L.RegFunction("DealFixedRotation", DealFixedRotation);
		L.RegFunction("Set3DSoundVol", Set3DSoundVol);
		L.RegFunction("Stop3DSound", Stop3DSound);
		L.RegFunction("Play3DSound", Play3DSound);
		L.RegFunction("MixHide", MixHide);
		L.RegFunction("ResetShader", ResetShader);
		L.RegFunction("SetPetrify", SetPetrify);
		L.RegFunction("SetFrozen", SetFrozen);
		L.RegFunction("SetEquipFrozen", SetEquipFrozen);
		L.RegFunction("HighLight", HighLight);
		L.RegFunction("SetDither", SetDither);
		L.RegFunction("SetHighLightColor", SetHighLightColor);
		L.RegFunction("PlayOutLineEffect", PlayOutLineEffect);
		L.RegFunction("PlayOutLight", PlayOutLight);
		L.RegFunction("FadeOut", FadeOut);
		L.RegFunction("StopAction", StopAction);
		L.RegFunction("PlayActionOnce", PlayActionOnce);
		L.RegFunction("PlayActionLoop", PlayActionLoop);
		L.RegFunction("HasAniAciton", HasAniAciton);
		L.RegFunction("SetAniEvent", SetAniEvent);
		L.RegFunction("OnAniEvent", OnAniEvent);
		L.RegFunction("BindEquip", BindEquip);
		L.RegFunction("UnBindEquip", UnBindEquip);
		L.RegFunction("RemoveEffect", RemoveEffect);
		L.RegFunction("BindEffect", BindEffect);
		L.RegFunction("BindEffectByPos", BindEffectByPos);
		L.RegFunction("BindLineEffect", BindLineEffect);
		L.RegFunction("BindLineEffectEx", BindLineEffectEx);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_FrozenShader", get_m_FrozenShader, set_m_FrozenShader);
		L.RegVar("m_FrozenTexture", get_m_FrozenTexture, set_m_FrozenTexture);
		L.RegVar("m_iParticleSystemGrade", get_m_iParticleSystemGrade, set_m_iParticleSystemGrade);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDummyFromCache(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform o = obj.GetDummyFromCache(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetScale(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetModelZoomRate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetModelZoomRate(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetVisible(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DealFixedRotation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			bool o = WCG.RenderObj.DealFixedRotation(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Set3DSoundVol(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Set3DSoundVol(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop3DSound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			obj.Stop3DSound();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Play3DSound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			float o = obj.Play3DSound(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MixHide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.MixHide(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetShader(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ResetShader(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPetrify(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetPetrify(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFrozen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetFrozen(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetEquipFrozen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetEquipFrozen(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HighLight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			obj.HighLight();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDither(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			obj.SetDither(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetHighLightColor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			obj.SetHighLightColor(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayOutLineEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			obj.PlayOutLineEffect(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayOutLight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			obj.PlayOutLight(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FadeOut(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			obj.FadeOut();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			obj.StopAction();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayActionOnce(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				obj.PlayActionOnce(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				obj.PlayActionOnce(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.RenderObj.PlayActionOnce");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayActionLoop(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				obj.PlayActionLoop(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				string arg3 = ToLua.CheckString(L, 5);
				obj.PlayActionLoop(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.RenderObj.PlayActionLoop");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasAniAciton(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.HasAniAciton(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAniEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.SetAniEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAniEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			obj.OnAniEvent();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindEquip(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			UnityEngine.GameObject o = obj.BindEquip(arg0, arg1, arg2);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnBindEquip(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.UnBindEquip(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RemoveEffect(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			UnityEngine.GameObject o = obj.BindEffect(arg0, arg1, arg2, arg3);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindEffectByPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			float arg5 = (float)LuaDLL.luaL_checknumber(L, 7);
			UnityEngine.GameObject o = obj.BindEffectByPos(arg0, arg1, arg2, arg3, arg4, arg5);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindLineEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			string arg2 = ToLua.CheckString(L, 4);
			string arg3 = ToLua.CheckString(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			UnityEngine.GameObject o = obj.BindLineEffect(arg0, arg1, arg2, arg3, arg4);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindLineEffectEx(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			WCG.RenderObj obj = (WCG.RenderObj)ToLua.CheckObject<WCG.RenderObj>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			float arg5 = (float)LuaDLL.luaL_checknumber(L, 7);
			UnityEngine.GameObject o = obj.BindLineEffectEx(arg0, arg1, arg2, arg3, arg4, arg5);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_FrozenShader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			WCG.RenderObj obj = (WCG.RenderObj)o;
			UnityEngine.Shader ret = obj.m_FrozenShader;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_FrozenShader on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_FrozenTexture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			WCG.RenderObj obj = (WCG.RenderObj)o;
			UnityEngine.Texture ret = obj.m_FrozenTexture;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_FrozenTexture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_iParticleSystemGrade(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, WCG.RenderObj.m_iParticleSystemGrade);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_FrozenShader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			WCG.RenderObj obj = (WCG.RenderObj)o;
			UnityEngine.Shader arg0 = (UnityEngine.Shader)ToLua.CheckObject(L, 2, typeof(UnityEngine.Shader));
			obj.m_FrozenShader = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_FrozenShader on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_FrozenTexture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			WCG.RenderObj obj = (WCG.RenderObj)o;
			UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
			obj.m_FrozenTexture = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_FrozenTexture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_iParticleSystemGrade(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			WCG.RenderObj.m_iParticleSystemGrade = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

