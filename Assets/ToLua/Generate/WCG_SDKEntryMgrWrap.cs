//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class WCG_SDKEntryMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(WCG.SDKEntryMgr), typeof(System.Object));
		L.RegFunction("GetChannel", GetChannel);
		L.RegFunction("GetChanTag", GetChanTag);
		L.RegFunction("InitEntry", InitEntry);
		L.RegFunction("SDKApi", SDKApi);
		L.RegFunction("OnSDKApi", OnSDKApi);
		L.RegFunction("Start", Start);
		L.RegFunction("Update", Update);
		L.RegFunction("New", _CreateWCG_SDKEntryMgr);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("msJavaClass", get_msJavaClass, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateWCG_SDKEntryMgr(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				WCG.SDKEntryMgr obj = new WCG.SDKEntryMgr();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: WCG.SDKEntryMgr.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = WCG.SDKEntryMgr.GetChannel();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetChanTag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = WCG.SDKEntryMgr.GetChanTag();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitEntry(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = WCG.SDKEntryMgr.InitEntry();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SDKApi(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string o = WCG.SDKEntryMgr.SDKApi(arg0);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string o = WCG.SDKEntryMgr.SDKApi(arg0, arg1);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WCG.SDKEntryMgr.SDKApi");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSDKApi(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			WCG.SDKEntryMgr.OnSDKApi(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			WCG.SDKEntryMgr.Start();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			WCG.SDKEntryMgr.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_msJavaClass(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, WCG.SDKEntryMgr.msJavaClass);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

